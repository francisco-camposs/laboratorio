Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00       43     0.00     0.00  std::vector<funcionario, std::allocator<funcionario> >::size() const
  0.00      0.00     0.00       32     0.00     0.00  std::vector<funcionario, std::allocator<funcionario> >::operator[](unsigned long)
  0.00      0.00     0.00       18     0.00     0.00  std::move_iterator<funcionario*>::base() const
  0.00      0.00     0.00       18     0.00     0.00  std::vector<empresa, std::allocator<empresa> >::operator[](unsigned long)
  0.00      0.00     0.00       14     0.00     0.00  std::char_traits<char>::compare(char const*, char const*, unsigned long)
  0.00      0.00     0.00       14     0.00     0.00  __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.00     0.00       13     0.00     0.00  std::vector<empresa, std::allocator<empresa> >::size() const
  0.00      0.00     0.00       12     0.00     0.00  __gnu_cxx::__normal_iterator<funcionario*, std::vector<funcionario, std::allocator<funcionario> > >::base() const
  0.00      0.00     0.00       12     0.00     0.00  std::_Vector_base<funcionario, std::allocator<funcionario> >::_M_get_Tp_allocator()
  0.00      0.00     0.00       12     0.00     0.00  std::move_iterator<funcionario*>::move_iterator(funcionario*)
  0.00      0.00     0.00       12     0.00     0.00  std::move_iterator<funcionario*> std::__make_move_if_noexcept_iterator<funcionario, std::move_iterator<funcionario*> >(funcionario*)
  0.00      0.00     0.00       11     0.00     0.00  funcionario::~funcionario()
  0.00      0.00     0.00       11     0.00     0.00  funcionario const& std::forward<funcionario const&>(std::remove_reference<funcionario const&>::type&)
  0.00      0.00     0.00       10     0.00     0.00  funcionario* std::__addressof<funcionario>(funcionario&)
  0.00      0.00     0.00        9     0.00     0.00  funcionario::get_Salario()
  0.00      0.00     0.00        9     0.00     0.00  funcionario::get_Nome[abi:cxx11]()
  0.00      0.00     0.00        9     0.00     0.00  empresa::get_CNPJ[abi:cxx11]()
  0.00      0.00     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<funcionario>::max_size() const
  0.00      0.00     0.00        9     0.00     0.00  bool std::operator==<funcionario*>(std::move_iterator<funcionario*> const&, std::move_iterator<funcionario*> const&)
  0.00      0.00     0.00        9     0.00     0.00  bool std::operator!=<funcionario*>(std::move_iterator<funcionario*> const&, std::move_iterator<funcionario*> const&)
  0.00      0.00     0.00        8     0.00     0.00  date::transform_in_days()
  0.00      0.00     0.00        8     0.00     0.00  date::set_day(int const&)
  0.00      0.00     0.00        8     0.00     0.00  date::set_year(int const&)
  0.00      0.00     0.00        8     0.00     0.00  date::set_month(int const&)
  0.00      0.00     0.00        8     0.00     0.00  date::date()
  0.00      0.00     0.00        8     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.00     0.00        7     0.00     0.00  std::_Vector_base<funcionario, std::allocator<funcionario> >::_M_get_Tp_allocator() const
  0.00      0.00     0.00        7     0.00     0.00  void std::_Destroy<funcionario>(funcionario*)
  0.00      0.00     0.00        6     0.00     0.00  funcionario::get_CPF[abi:cxx11]()
  0.00      0.00     0.00        6     0.00     0.00  __gnu_cxx::__normal_iterator<funcionario*, std::vector<funcionario, std::allocator<funcionario> > >::__normal_iterator(funcionario* const&)
  0.00      0.00     0.00        6     0.00     0.00  std::vector<funcionario, std::allocator<funcionario> >::max_size() const
  0.00      0.00     0.00        6     0.00     0.00  std::allocator_traits<std::allocator<funcionario> >::max_size(std::allocator<funcionario> const&)
  0.00      0.00     0.00        6     0.00     0.00  funcionario* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<funcionario*>, funcionario*>(std::move_iterator<funcionario*>, std::move_iterator<funcionario*>, funcionario*)
  0.00      0.00     0.00        6     0.00     0.00  funcionario* std::uninitialized_copy<std::move_iterator<funcionario*>, funcionario*>(std::move_iterator<funcionario*>, std::move_iterator<funcionario*>, funcionario*)
  0.00      0.00     0.00        6     0.00     0.00  funcionario* std::__uninitialized_copy_a<std::move_iterator<funcionario*>, funcionario*, funcionario>(std::move_iterator<funcionario*>, std::move_iterator<funcionario*>, funcionario*, std::allocator<funcionario>&)
  0.00      0.00     0.00        6     0.00     0.00  funcionario* std::__uninitialized_move_if_noexcept_a<funcionario*, funcionario*, std::allocator<funcionario> >(funcionario*, funcionario*, funcionario*, std::allocator<funcionario>&)
  0.00      0.00     0.00        5     0.00     0.00  void std::_Destroy_aux<false>::__destroy<funcionario*>(funcionario*, funcionario*)
  0.00      0.00     0.00        5     0.00     0.00  std::_Vector_base<funcionario, std::allocator<funcionario> >::_M_deallocate(funcionario*, unsigned long)
  0.00      0.00     0.00        5     0.00     0.00  void std::_Destroy<funcionario*>(funcionario*, funcionario*)
  0.00      0.00     0.00        5     0.00     0.00  void std::_Destroy<funcionario*, funcionario>(funcionario*, funcionario*, std::allocator<funcionario>&)
  0.00      0.00     0.00        4     0.00     0.00  funcionario::set_Salario(float)
  0.00      0.00     0.00        4     0.00     0.00  funcionario::alterar_salario(float)
  0.00      0.00     0.00        4     0.00     0.00  funcionario::get_data_de_admissao()
  0.00      0.00     0.00        4     0.00     0.00  funcionario::set_data_de_admissao(int, int, int)
  0.00      0.00     0.00        4     0.00     0.00  funcionario::set_CPF(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00        4     0.00     0.00  funcionario::set_Nome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00        4     0.00     0.00  funcionario::funcionario(funcionario const&)
  0.00      0.00     0.00        4     0.00     0.00  funcionario::funcionario()
  0.00      0.00     0.00        4     0.00     0.00  controle_empresas::add_funcionarios(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int, int)
  0.00      0.00     0.00        4     0.00     0.00  date::operator-(date)
  0.00      0.00     0.00        4     0.00     0.00  empresa::add_funcionario(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int, int)
  0.00      0.00     0.00        4     0.00     0.00  void __gnu_cxx::new_allocator<funcionario>::construct<funcionario, funcionario const&>(funcionario*, funcionario const&)
  0.00      0.00     0.00        4     0.00     0.00  date::day() const
  0.00      0.00     0.00        4     0.00     0.00  date::year() const
  0.00      0.00     0.00        4     0.00     0.00  date::month() const
  0.00      0.00     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<empresa*, std::vector<empresa, std::allocator<empresa> > >::base() const
  0.00      0.00     0.00        4     0.00     0.00  std::move_iterator<empresa*>::base() const
  0.00      0.00     0.00        4     0.00     0.00  std::_Vector_base<funcionario, std::allocator<funcionario> >::_M_allocate(unsigned long)
  0.00      0.00     0.00        4     0.00     0.00  std::_Vector_base<empresa, std::allocator<empresa> >::_M_get_Tp_allocator()
  0.00      0.00     0.00        4     0.00     0.00  std::move_iterator<empresa*>::move_iterator(empresa*)
  0.00      0.00     0.00        4     0.00     0.00  void std::allocator_traits<std::allocator<funcionario> >::construct<funcionario, funcionario const&>(std::allocator<funcionario>&, funcionario*, funcionario const&)
  0.00      0.00     0.00        4     0.00     0.00  std::vector<funcionario, std::allocator<funcionario> >::push_back(funcionario const&)
  0.00      0.00     0.00        4     0.00     0.00  std::move_iterator<empresa*> std::__make_move_if_noexcept_iterator<empresa, std::move_iterator<empresa*> >(empresa*)
  0.00      0.00     0.00        4     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.00     0.00        3     0.00     0.00  funcionario::funcionario(funcionario&&)
  0.00      0.00     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<funcionario>::deallocate(funcionario*, unsigned long)
  0.00      0.00     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<funcionario>::allocate(unsigned long, void const*)
  0.00      0.00     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<funcionario>::~new_allocator()
  0.00      0.00     0.00        3     0.00     0.00  __gnu_cxx::__normal_iterator<funcionario*, std::vector<funcionario, std::allocator<funcionario> > >::difference_type __gnu_cxx::operator-<funcionario*, std::vector<funcionario, std::allocator<funcionario> > >(__gnu_cxx::__normal_iterator<funcionario*, std::vector<funcionario, std::allocator<funcionario> > > const&, __gnu_cxx::__normal_iterator<funcionario*, std::vector<funcionario, std::allocator<funcionario> > > const&)
  0.00      0.00     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<empresa>::max_size() const
  0.00      0.00     0.00        3     0.00     0.00  std::move_iterator<funcionario*>::operator*() const
  0.00      0.00     0.00        3     0.00     0.00  std::vector<funcionario, std::allocator<funcionario> >::_M_check_len(unsigned long, char const*) const
  0.00      0.00     0.00        3     0.00     0.00  std::allocator<funcionario>::~allocator()
  0.00      0.00     0.00        3     0.00     0.00  std::move_iterator<funcionario*>::operator++()
  0.00      0.00     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<funcionario> >::deallocate(std::allocator<funcionario>&, funcionario*, unsigned long)
  0.00      0.00     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<funcionario> >::allocate(std::allocator<funcionario>&, unsigned long)
  0.00      0.00     0.00        3     0.00     0.00  void std::vector<funcionario, std::allocator<funcionario> >::_M_realloc_insert<funcionario const&>(__gnu_cxx::__normal_iterator<funcionario*, std::vector<funcionario, std::allocator<funcionario> > >, funcionario const&)
  0.00      0.00     0.00        3     0.00     0.00  std::vector<funcionario, std::allocator<funcionario> >::end()
  0.00      0.00     0.00        3     0.00     0.00  std::vector<funcionario, std::allocator<funcionario> >::begin()
  0.00      0.00     0.00        3     0.00     0.00  void std::_Construct<funcionario, funcionario>(funcionario*, funcionario&&)
  0.00      0.00     0.00        3     0.00     0.00  funcionario&& std::forward<funcionario>(std::remove_reference<funcionario>::type&)
  0.00      0.00     0.00        3     0.00     0.00  empresa const& std::forward<empresa const&>(std::remove_reference<empresa const&>::type&)
  0.00      0.00     0.00        2     0.00     0.00  controle_empresas::listar_funcionarios_empresa(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00        2     0.00     0.00  empresa::listar_func()
  0.00      0.00     0.00        2     0.00     0.00  empresa::~empresa()
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<funcionario>::new_allocator(__gnu_cxx::new_allocator<funcionario> const&)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<empresa*, std::vector<empresa, std::allocator<empresa> > >::__normal_iterator(empresa* const&)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<funcionario const*, std::vector<funcionario, std::allocator<funcionario> > >::__normal_iterator(funcionario const* const&)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<funcionario const*, std::vector<funcionario, std::allocator<funcionario> > >::base() const
  0.00      0.00     0.00        2     0.00     0.00  std::_Vector_base<empresa, std::allocator<empresa> >::_M_get_Tp_allocator() const
  0.00      0.00     0.00        2     0.00     0.00  std::vector<empresa, std::allocator<empresa> >::max_size() const
  0.00      0.00     0.00        2     0.00     0.00  std::allocator<funcionario>::allocator(std::allocator<funcionario> const&)
  0.00      0.00     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<empresa*>(empresa*, empresa*)
  0.00      0.00     0.00        2     0.00     0.00  std::_Vector_base<funcionario, std::allocator<funcionario> >::_Vector_impl::~_Vector_impl()
  0.00      0.00     0.00        2     0.00     0.00  std::_Vector_base<funcionario, std::allocator<funcionario> >::~_Vector_base()
  0.00      0.00     0.00        2     0.00     0.00  std::_Vector_base<empresa, std::allocator<empresa> >::_M_deallocate(empresa*, unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<empresa> >::max_size(std::allocator<empresa> const&)
  0.00      0.00     0.00        2     0.00     0.00  empresa* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<empresa*>, empresa*>(std::move_iterator<empresa*>, std::move_iterator<empresa*>, empresa*)
  0.00      0.00     0.00        2     0.00     0.00  std::vector<funcionario, std::allocator<funcionario> >::~vector()
  0.00      0.00     0.00        2     0.00     0.00  empresa* std::uninitialized_copy<std::move_iterator<empresa*>, empresa*>(std::move_iterator<empresa*>, std::move_iterator<empresa*>, empresa*)
  0.00      0.00     0.00        2     0.00     0.00  empresa* std::__uninitialized_copy_a<std::move_iterator<empresa*>, empresa*, empresa>(std::move_iterator<empresa*>, std::move_iterator<empresa*>, empresa*, std::allocator<empresa>&)
  0.00      0.00     0.00        2     0.00     0.00  empresa* std::__uninitialized_move_if_noexcept_a<empresa*, empresa*, std::allocator<empresa> >(empresa*, empresa*, empresa*, std::allocator<empresa>&)
  0.00      0.00     0.00        2     0.00     0.00  void std::_Destroy<empresa*>(empresa*, empresa*)
  0.00      0.00     0.00        2     0.00     0.00  void std::_Destroy<empresa*, empresa>(empresa*, empresa*, std::allocator<empresa>&)
  0.00      0.00     0.00        2     0.00     0.00  bool std::operator==<empresa*>(std::move_iterator<empresa*> const&, std::move_iterator<empresa*> const&)
  0.00      0.00     0.00        2     0.00     0.00  bool std::operator!=<empresa*>(std::move_iterator<empresa*> const&, std::move_iterator<empresa*> const&)
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN11funcionarioC2Ev
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN17controle_empresas11add_EmpresaENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4dateC2ERKiS1_S1_
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7empresa10data_atualE
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7empresa8set_nomeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  controle_empresas::add_Empresa(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00        1     0.00     0.00  controle_empresas::listar_empresas()
  0.00      0.00     0.00        1     0.00     0.00  controle_empresas::alterar_salario_funcionario(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float)
  0.00      0.00     0.00        1     0.00     0.00  controle_empresas::listar_funcionarios_em_experiencia(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00        1     0.00     0.00  controle_empresas::controle_empresas()
  0.00      0.00     0.00        1     0.00     0.00  controle_empresas::~controle_empresas()
  0.00      0.00     0.00        1     0.00     0.00  date::date(int const&, int const&, int const&)
  0.00      0.00     0.00        1     0.00     0.00  empresa::listar_func_periodo_exp()
  0.00      0.00     0.00        1     0.00     0.00  empresa::aumentar_salario_todos_funcionarios(float)
  0.00      0.00     0.00        1     0.00     0.00  empresa::get_nome[abi:cxx11]()
  0.00      0.00     0.00        1     0.00     0.00  empresa::set_CNPJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00        1     0.00     0.00  empresa::set_nome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.00     0.00        1     0.00     0.00  empresa::empresa(empresa const&)
  0.00      0.00     0.00        1     0.00     0.00  empresa::empresa()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<funcionario>::new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<empresa>::deallocate(empresa*, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<empresa>::allocate(unsigned long, void const*)
  0.00      0.00     0.00        1     0.00     0.00  void __gnu_cxx::new_allocator<empresa>::construct<empresa, empresa const&>(empresa*, empresa const&)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<empresa>::new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<empresa>::~new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<funcionario> >::_S_select_on_copy(std::allocator<funcionario> const&)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<empresa*, std::vector<empresa, std::allocator<empresa> > >::difference_type __gnu_cxx::operator-<empresa*, std::vector<empresa, std::allocator<empresa> > >(__gnu_cxx::__normal_iterator<empresa*, std::vector<empresa, std::allocator<empresa> > > const&, __gnu_cxx::__normal_iterator<empresa*, std::vector<empresa, std::allocator<empresa> > > const&)
  0.00      0.00     0.00        1     0.00     0.00  bool __gnu_cxx::operator!=<funcionario const*, std::vector<funcionario, std::allocator<funcionario> > >(__gnu_cxx::__normal_iterator<funcionario const*, std::vector<funcionario, std::allocator<funcionario> > > const&, __gnu_cxx::__normal_iterator<funcionario const*, std::vector<funcionario, std::allocator<funcionario> > > const&)
  0.00      0.00     0.00        1     0.00     0.00  std::vector<funcionario, std::allocator<funcionario> >::end() const
  0.00      0.00     0.00        1     0.00     0.00  std::vector<funcionario, std::allocator<funcionario> >::begin() const
  0.00      0.00     0.00        1     0.00     0.00  std::vector<empresa, std::allocator<empresa> >::_M_check_len(unsigned long, char const*) const
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<funcionario>::allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<empresa>::allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<empresa>::~allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<funcionario, std::allocator<funcionario> >::_Vector_impl::_Vector_impl(std::allocator<funcionario> const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<funcionario, std::allocator<funcionario> >::_Vector_impl::_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<funcionario, std::allocator<funcionario> >::_M_create_storage(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<funcionario, std::allocator<funcionario> >::_Vector_base(unsigned long, std::allocator<funcionario> const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<funcionario, std::allocator<funcionario> >::_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<empresa, std::allocator<empresa> >::_M_allocate(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<empresa, std::allocator<empresa> >::_Vector_impl::_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<empresa, std::allocator<empresa> >::_Vector_impl::~_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<empresa, std::allocator<empresa> >::_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<empresa, std::allocator<empresa> >::~_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<funcionario> >::select_on_container_copy_construction(std::allocator<funcionario> const&)
  0.00      0.00     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<empresa> >::deallocate(std::allocator<empresa>&, empresa*, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<empresa> >::allocate(std::allocator<empresa>&, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  void std::allocator_traits<std::allocator<empresa> >::construct<empresa, empresa const&>(std::allocator<empresa>&, empresa*, empresa const&)
  0.00      0.00     0.00        1     0.00     0.00  funcionario* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<funcionario const*, std::vector<funcionario, std::allocator<funcionario> > >, funcionario*>(__gnu_cxx::__normal_iterator<funcionario const*, std::vector<funcionario, std::allocator<funcionario> > >, __gnu_cxx::__normal_iterator<funcionario const*, std::vector<funcionario, std::allocator<funcionario> > >, funcionario*)
  0.00      0.00     0.00        1     0.00     0.00  std::vector<funcionario, std::allocator<funcionario> >::vector(std::vector<funcionario, std::allocator<funcionario> > const&)
  0.00      0.00     0.00        1     0.00     0.00  std::vector<funcionario, std::allocator<funcionario> >::vector()
  0.00      0.00     0.00        1     0.00     0.00  void std::vector<empresa, std::allocator<empresa> >::_M_realloc_insert<empresa const&>(__gnu_cxx::__normal_iterator<empresa*, std::vector<empresa, std::allocator<empresa> > >, empresa const&)
  0.00      0.00     0.00        1     0.00     0.00  std::vector<empresa, std::allocator<empresa> >::end()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<empresa, std::allocator<empresa> >::begin()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<empresa, std::allocator<empresa> >::push_back(empresa const&)
  0.00      0.00     0.00        1     0.00     0.00  std::vector<empresa, std::allocator<empresa> >::vector()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<empresa, std::allocator<empresa> >::~vector()
  0.00      0.00     0.00        1     0.00     0.00  empresa* std::__addressof<empresa>(empresa&)
  0.00      0.00     0.00        1     0.00     0.00  funcionario* std::uninitialized_copy<__gnu_cxx::__normal_iterator<funcionario const*, std::vector<funcionario, std::allocator<funcionario> > >, funcionario*>(__gnu_cxx::__normal_iterator<funcionario const*, std::vector<funcionario, std::allocator<funcionario> > >, __gnu_cxx::__normal_iterator<funcionario const*, std::vector<funcionario, std::allocator<funcionario> > >, funcionario*)
  0.00      0.00     0.00        1     0.00     0.00  funcionario* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<funcionario const*, std::vector<funcionario, std::allocator<funcionario> > >, funcionario*, funcionario>(__gnu_cxx::__normal_iterator<funcionario const*, std::vector<funcionario, std::allocator<funcionario> > >, __gnu_cxx::__normal_iterator<funcionario const*, std::vector<funcionario, std::allocator<funcionario> > >, funcionario*, std::allocator<funcionario>&)
  0.00      0.00     0.00        1     0.00     0.00  void std::_Destroy<empresa>(empresa*)
